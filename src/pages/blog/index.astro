---
import { getCollection, render } from 'astro:content'
import Container from '../../components/blog/Container'
import HeroPost from '../../components/blog/HeroPost'
import Intro from '../../components/blog/Index/Intro'
import MoreStories from '../../components/blog/Index/MoreStories'
import Layout from '../../components/blog/Layout.astro'
import Meta from '../../components/blog/Meta'
import config from '../../config.json'

// import SlugPage from '../../../oldsite/pages/blog/[slug]'

// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
    const posts = await getCollection('blog')
    console.log('posts', posts)

    return posts.map((post) => ({
        params: { id: post.id },
        props: { post },
    }))
}

// 2. For your template, you can get the entry directly from the prop
console.log('Astro.props ', Astro.props)
const posts = await getCollection('blog')

const { blogDescription, blogUrl, blogPath } = config

type Props = {
    p?: string
}

const allPosts = await getCollection('blog')

const heroPost = allPosts[0]
const morePosts = allPosts.slice(1)

// // Check for old URL format: `/?p={id}`
// if (Astro.params.p) {
//     const id = Number(Astro.params.p)
//     const post = allPosts.find((post) => post.id === String(id))

//     if (post) {
//         Astro.redirect(`${blogPath}/${post.id}`)
//     }
// }
---

<Layout>
    <head>
        <title>{blogDescription}</title>
        <Meta
            siteName={blogDescription}
            image={`${blogUrl}/cover.jpg`}
            description={blogDescription}
            title={blogDescription}
            url={blogUrl}
        />
    </head>
    <Container>
        <Intro />
        {
            heroPost ? (
                <HeroPost
                    title={heroPost.data.title}
                    coverImage={heroPost.data.coverImage}
                    date={heroPost.data.date.toISOString()}
                    slug={String(heroPost.data.id)}
                    excerpt={heroPost.data.excerpt ?? ''}
                />
            ) : null
        }
        {
            morePosts.length > 0 ? (
                <MoreStories
                    posts={morePosts.map(
                        (post): BlogPost => ({
                            ...post.data,
                            id: String(post.id),
                            slug: post.id,
                            date: post.data.date.toISOString(),
                            excerpt: post.data.excerpt ?? '',
                            coverImage: post.data.coverImage ?? '',
                            ogImage: post.data.ogImage ?? '',
                            categories: post.data.categories ?? [],
                        }),
                    )}
                />
            ) : null
        }
    </Container>
</Layout>
