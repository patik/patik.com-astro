---
// must be at top
import '@/assets/styles/github-markdown.css'

import { Markdown } from 'astro-remote'

import List from '@/layouts/List.astro'
import Anchor from '@/components/astro-remote/Anchor.astro'
import Heading from '@/components/astro-remote/Heading.astro'
import { BOOKMARKS } from '@/constants/data'
import { SELECTORS } from '@/constants/dom'
import { getPageMetadata } from '@/utils/metadata'

const { README_RAW_URL, REPO } = BOOKMARKS

const readmeContent = await fetch(README_RAW_URL).then((response) => response.text())

const metadata = getPageMetadata('lists/links')

const { GITHUB_MARKDOWN_BODY_ID } = SELECTORS
---

<List {metadata}>
    <div id={GITHUB_MARKDOWN_BODY_ID} class="markdown-body">
        <p>
            My personal bookmarks collection which is hosted in this repo: <a href={REPO} target="_blank">{REPO}</a>
        </p>

        <Markdown
            content={readmeContent}
            sanitize={{ dropElements: ['h1'], allowComponents: true }}
            components={{ Heading, a: Anchor }}
        />
    </div>
</List>

<style is:global>
    #markdown-body-id {
        /* set transparent bg-color */
        @apply !bg-transparent;

        /* fix list style */
        ul,
        ol {
            list-style: revert;
        }
    }
</style>

<script>
    import { SELECTORS } from '@/constants/dom'
    import { MODES, THEME_CONFIG } from '@/constants/theme'
    import { getCurrentMode } from '@/utils/theme'

    import type { ChangeThemeCustomEvent, Mode } from '@/types/constants'

    const { CHANGE_EVENT } = THEME_CONFIG
    const { GITHUB_MARKDOWN_BODY_SELECTOR } = SELECTORS

    const loadGithubTheme = (mode: Mode) => {
        const markdownBodyElement = document.querySelector(GITHUB_MARKDOWN_BODY_SELECTOR)
        if (!markdownBodyElement) return

        if (markdownBodyElement && mode === MODES.dark) markdownBodyElement.setAttribute('data-theme', MODES.dark)
        else markdownBodyElement.setAttribute('data-theme', MODES.light)
    }

    // will run only on page load
    const mode = getCurrentMode()
    loadGithubTheme(mode)

    // will run on button click
    document.addEventListener(CHANGE_EVENT, async (event) => {
        const customEvent = event as ChangeThemeCustomEvent
        const { mode } = customEvent.detail.theme

        loadGithubTheme(mode)
    })
</script>
