/*  Global Foundation Mixins */

:root {
    --base-font-size: 100%;

    /* --base-line-height is 24px while --base-font-size is 16px */
    --base-line-height: 150%;

    /* This is the default html and body font-size for the base em value. */
    --em-base: 16px;

    --body-bg: #fff;
    --body-font-color: #222;
    --body-font-family: 'Helvetica Neue', 'Helvetica', Helvetica, Arial, sans-serif;
    --body-font-weight: normal;
    --body-font-style: normal;

    /* // We use this to control font-smoothing */
    --font-smoothing: subpixel-antialiased;

    /* // We use these to control text direction settings */
    --text-direction: ltr;

    /* // NOTE: No need to change this conditional statement, --text-direction variable controls it all. */
    --default-float: left;
    --opposite-direction: right;

    /* // We use these as default colors throughout */
    --primary-color: #2ba6cb;
    --secondary-color: #e9e9e9;
    --alert-color: #c60f13;
    --success-color: #5da423;

    /* // We use these to make sure border radius matches unless we want it different. */
    --global-radius: 3px;
    --global-rounded: 1000px;

    /* // We use these to control inset shadow shiny edges and depressions. */
    --shiny-edge-size: 0 1px 0;
    --shiny-edge-color: rgba(#fff, 0.5);
    --shiny-edge-active-color: rgba(#000, 0.2);

    /* // We use this to control whether or not CSS classes come through in the gem files. */
    --include-html-classes: true;
    --include-print-styles: true;
    --include-html-global-classes: --include-html-classes;

    /* Media Queries */
    --small-screen: 768px;
    --medium-screen: 1280px;
    --large-screen: 1440px;
}

/* Used to provide media query values for javascript components. */
meta.foundation-mq-small {
    font-family: var(--small);
    width: var(--small-screen);
}

meta.foundation-mq-medium {
    font-family: var(--medium);
    width: var(--medium-screen);
}

meta.foundation-mq-large {
    font-family: var(--large);
    width: var(--large-screen);
}

:root {
    /* We use this as cursors values for enabling the option of having custom cursors in the whole site's stylesheet */
    --cursor-crosshair-value: crosshair;
    --cursor-default-value: default;
    --cursor-pointer-value: pointer;
    --cursor-help-value: help;
}

*,
*:before,
*:after {
    box-sizing: border-box;
}

html,
body {
    font-size: var(--base-font-size);
}

body {
    background: var(--body-bg);
    color: var(--body-font-color);
    padding: 0;
    margin: 0;
    font-family: var(--body-font-family);
    font-weight: var(--body-font-weight);
    font-style: var(--body-font-style);
    line-height: 1; /* Set to $base-line-height to take on browser default of 150% */
    position: relative;
    cursor: var(--cursor-pointer-value);
}

a:hover {
    cursor: var(--cursor-pointer-value);
}

/* Grid Defaults to get images and embeds to work properly */
img,
object,
embed {
    max-width: 100%;
    height: auto;
}

object,
embed {
    height: 100%;
}
img {
    -ms-interpolation-mode: bicubic;
}

#map_canvas,
.map_canvas {
    img,
    embed,
    object {
        max-width: none !important;
    }
}

/* Miscellaneous useful HTML classes */
.left {
    float: left !important;
}
.right {
    float: right !important;
}
.text-left {
    text-align: left !important;
}
.text-right {
    text-align: right !important;
}
.text-center {
    text-align: center !important;
}
.text-justify {
    text-align: justify !important;
}
.hide {
    display: none;
}

/* Font smoothing
   Antialiased font smoothing works best for light text on a dark background.
   Apply to single elements instead of globally to body.
   Note this only applies to webkit-based desktop browsers on the Mac.
*/
.antialiased {
    -webkit-font-smoothing: antialiased;
}

/* Get rid of gap under images by making them display: inline-block; by default */
img {
    display: inline-block;
    vertical-align: middle;
}

/* Make sure textarea takes on height automatically */
textarea {
    height: auto;
    min-height: 50px;
}

/* Make select elements 100% width by default */
select {
    width: 100%;
}
